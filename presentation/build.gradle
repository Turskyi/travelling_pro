//file:noinspection GrUnresolvedAccess
plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'com.google.firebase.firebase-perf'
    id 'kotlin-parcelize'
}

android {
    compileSdkVersion rootProject.compile_sdk_version
    buildToolsVersion rootProject.build_tools_version

    defaultConfig {
        applicationId "io.github.turskyi.travellingpro"
        minSdkVersion rootProject.min_sdk_version
        targetSdkVersion rootProject.target_sdk_version
        versionCode rootProject.version_code
        versionName rootProject.version_name

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        resConfigs 'en'

        // to ensure that the translations of Firebase library are relevant to the application
    }
    signingConfigs {
        production {
            storeFile file(rootProject.SIGNING_KEY_RELEASE_PATH)
            storePassword rootProject.SIGNING_KEY_RELEASE_PASSWORD
            keyAlias rootProject.SIGNING_KEY_RELEASE_KEY
            keyPassword rootProject.SIGNING_KEY_RELEASE_KEY_PASSWORD
        }
        dev {
            storeFile file(rootProject.SIGNING_KEY_DEBUG_PATH)
            storePassword rootProject.SIGNING_KEY_DEBUG_PASSWORD
            keyAlias rootProject.SIGNING_KEY_DEBUG_KEY
            keyPassword rootProject.SIGNING_KEY_DEBUG_KEY_PASSWORD
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),
                    'proguard-rules.pro'
            signingConfig signingConfigs.production
            // used in manifest provider authorities
            resValue "string", "content_provider",
                    "com.facebook.app.FacebookContentProvider2312394202364807"
        }
        debug {
            signingConfig signingConfigs.dev
            // used in manifest provider authorities
            resValue "string", "content_provider",
                    "com.facebook.app.FacebookContentProvider2312394202364807"
        }
    }
    buildFeatures {
        dataBinding true
        viewBinding true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(":domain")
    implementation project(":di")

    // design components
    implementation "com.google.android.material:material:$material_version"

    implementation "androidx.fragment:fragment-ktx:$fragment_version"
    implementation "androidx.activity:activity-ktx:$activity_version"

    // android
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation 'androidx.core:core-ktx:1.7.0'

    // firebase
    implementation 'com.google.firebase:firebase-crashlytics:18.2.7'
    implementation('com.google.firebase:firebase-analytics:20.0.2') {
        // remove advertising dependency
        exclude module: "play-services-ads-identifier"
        exclude module: "play-services-measurement"
        exclude module: "play-services-measurement-sdk"
    }
    // To show authentication page with pre-implemented authentication
    implementation "com.firebaseui:firebase-ui-auth:$firebase_ui_auth_version"
// performance tracing
    implementation 'com.google.firebase:firebase-perf:20.0.4'
// to send notifications across devices from firebase console
    implementation 'com.google.firebase:firebase-messaging:23.0.0'

    // Glide (Image caching and management)
    def glideVersion = "4.13.0"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"
    implementation "com.github.bumptech.glide:glide:$glideVersion"

    // ViewModel and LiveData
    def lifecycle_version = "2.4.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"

    // Displaying SVG images
    implementation 'com.github.corouteam:GlideToVectorYou:2.0.0'

    // BaseRecyclerViewAdapterHelper
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.6'

    // Recyclerview
    implementation 'androidx.recyclerview:recyclerview:1.2.1'

    // CardView
    implementation 'androidx.cardview:cardview:1.0.0'

    // Android chart view / graph view library
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'

    // ViewPager2
    implementation "androidx.viewpager2:viewpager2:1.0.0"

    // PhotoView
    implementation 'com.github.chrisbanes:PhotoView:2.3.0'

    // Location
    implementation "com.google.android.gms:play-services-location:19.0.1"

    // Facebook SDK
    def facebookVersion = "12.3.0"
    implementation "com.facebook.android:facebook-share:$facebookVersion"
    implementation "com.facebook.android:facebook-applinks:$facebookVersion"
    implementation "com.facebook.android:facebook-login:$facebookVersion"
    implementation "com.facebook.android:facebook-android-sdk:$facebookVersion"

    // used for animation
    def lottieVersion = "4.2.2"
    implementation "com.airbnb.android:lottie:$lottieVersion"

    // Koin for Android
    implementation("io.insert-koin:koin-android:$insert_koin_version")

    // Koin core features
    implementation("io.insert-koin:koin-core:$insert_koin_version")

    // test
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test.ext:junit:$ext_junit_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"

    def jupiter_version = "5.8.2"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$jupiter_version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$jupiter_version"
}